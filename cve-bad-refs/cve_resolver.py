import sys
import socket
import time
import os

# Check if the user provided a list of domains as an argument
if len(sys.argv) != 2:
    print(f"Usage: python {os.path.basename(__file__)} <input_domains_file>")
    sys.exit(1)

input_domains_file = sys.argv[1]

# TODO: Should be able to set a specific DNS resolver for more
# consistent results. Look at dnspython for this
# https://pypi.org/project/dnspython/

# Function to validate if a string is a valid DNS name
def is_valid_dns_name(name):
    print(f"Checking '{name}'")
    # Valid DNS names can contain letters, numbers, hyphens, and periods
    # They cannot start or end with a hyphen, cannot contain spaces,
    # and must be at least 3 characters long
    if (len(name) >= 3) and \
       all(c.isalnum() or c in "-." for c in name) and \
       not name.startswith("-") and not name.endswith("-") and \
       " " not in name:
        return True
    return False

# Function to check if a domain is live
def is_domain_live(domain):
    try:
        # Use the specified resolver to resolve the domain's IP address
        socket.gethostbyname(domain)
        return True
    except socket.gaierror:
        return False

# Read the list of domains from the input file
with open(input_domains_file, 'r') as input_file:
    domains = [line.strip() for line in input_file]

# Output file names
alive_domains_file = "alive-dns.txt"
dead_domains_file = "dead-dns.txt"

# Check each domain and write to the appropriate file
with open(alive_domains_file, 'w') as alive_file, open(dead_domains_file, 'w') as dead_file:
    for domain in domains:
        if not is_valid_dns_name(domain):
            sys.stderr.write(f"[!] Skipping invalid DNS name: '{domain}'\n")
            continue

        print(f"[+] Checking {domain}")
        if is_domain_live(domain):
            print(f"[+] ALIVE: {domain}")
            alive_file.write(domain + '\n')
        else:
            print(f"[-] DEAD: {domain}")
            dead_file.write(domain + '\n')
        time.sleep(1)  # Rate limit to one query per second